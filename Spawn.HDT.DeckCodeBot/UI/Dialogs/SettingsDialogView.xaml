<controls:MetroWindow x:Class="Spawn.HDT.DeckCodeBot.UI.Dialogs.SettingsDialogView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:components="clr-namespace:Spawn.HDT.DeckCodeBot.UI.Components"
        xmlns:vm="clr-namespace:Spawn.HDT.DeckCodeBot.UI.ViewModels"
        mc:Ignorable="d" WindowStartupLocation="CenterOwner" BorderBrush="{DynamicResource AccentColorBrush}"
        Title="{Binding WindowTitle}" SizeToContent="WidthAndHeight" ResizeMode="NoResize" GlowBrush="Black">
    <Window.DataContext>
        <vm:SettingsDialogViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="CustomButtonStyle" BasedOn="{StaticResource AccentedSquareButtonStyle}" TargetType="{x:Type Button}">
                <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
            </Style>
            <Style x:Key="LinkLabelStyle" TargetType="Run">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="DarkOrange" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <StackPanel Orientation="Vertical" Margin="5" Width="375">
        <DockPanel Height="30" ToolTip="Twitch IRC URL to connect to." ToolTipService.ShowDuration="10000" Visibility="{Binding DebugVisibility}">
            <Label Content="{Binding TwitchIrcUrlLabelText}" VerticalAlignment="Center" Margin="5,0,0,0"/>
            <TextBox Text="{Binding TwitchIrcUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0" Width="255"/>
        </DockPanel>
        <DockPanel Height="30" ToolTip="Twitch IRC port to connect to." ToolTipService.ShowDuration="10000" Visibility="{Binding DebugVisibility}">
            <Label Content="{Binding TwitchIrcPortLabelText}" VerticalAlignment="Center" Margin="5,0,0,0"/>
            <TextBox Name="TwitchIrcPortTextBox" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0" Width="255" MaxLength="5">
                <TextBox.Text>
                    <Binding Path="TwitchIrcPort" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <components:NumericValidationRule ValidatesOnTargetUpdated="True" MinValue="0" MaxValue="65535"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </DockPanel>
        <DockPanel Height="30" ToolTip="Name of your Twitch channel." ToolTipService.ShowDuration="10000">
            <Label Content="{Binding ChannelNameLabelText}" VerticalAlignment="Center" Margin="5,0,0,0"/>
            <TextBox Text="{Binding ChannelName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0" Width="255"/>
        </DockPanel>
        <DockPanel Height="30" ToolTip="Name of the Twitch account that is responding to the specified chat command." ToolTipService.ShowDuration="10000">
            <Label Content="{Binding BotUsernameLabelText}" VerticalAlignment="Center" Margin="5,0,0,0"/>
            <TextBox Text="{Binding BotUsername, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0" Width="255"/>
        </DockPanel>
        <DockPanel Height="30" ToolTip="Authentication token for Twitch. In order to generate a token, login to the Twitch account for the bot and follow the link." ToolTipService.ShowDuration="10000">
            <Label VerticalAlignment="Center" Margin="5,0,0,0">
                <Hyperlink  NavigateUri="https://twitchapps.com/tmi/" RequestNavigate="OnRequestNavigate">
                    <Run Style="{StaticResource LinkLabelStyle}" Text="{Binding TwitchOAuthTokenLabelText}"/>
                </Hyperlink>
            </Label>
            <TextBox VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0" Width="255">
                <TextBox.Text>
                    <Binding Path="TwitchOAuthToken" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <components:OAuthTokenValidationRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </DockPanel>
        <DockPanel Height="30" ToolTip="The command the bot is going to respond to." ToolTipService.ShowDuration="10000">
            <Label Content="{Binding ChatCommandLabelText}" VerticalAlignment="Center" Margin="5,0,0,0"/>
            <TextBox Text="{Binding ChatCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0" Width="255"/>
        </DockPanel>

        <WrapPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,20,5,5">
            <Button Content="_Ok" IsDefault="True" Command="{Binding SaveSettingsCommand}" Click="OnOkClick" Width="75" Margin="0,0,10,0" Height="28">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CustomButtonStyle}">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=TwitchIrcPortTextBox, Path=(Validation.HasError)}" Value="False">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Style="{DynamicResource CustomButtonStyle}" Content="_Cancel" IsCancel="True" Width="75" Height="28"></Button>
        </WrapPanel>
    </StackPanel>
</controls:MetroWindow>